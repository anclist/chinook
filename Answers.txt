
1. Find the albums recorded by the artist Queen.


[2] pry(main)> Artist.where(name: 'Queen')
  Artist Load (0.6ms)  SELECT "artists".* FROM "artists" WHERE "artists"."name" = $1  [["name", "Queen"]]
=> [#<Artist:0x007fc9e234b648
  id: 51,
  name: "Queen",
  created_at: Sun, 08 Jan 2006 22:57:01 UTC +00:00,
  updated_at: Wed, 29 Jan 2014 22:10:22 UTC +00:00>]
[3] pry(main)> Album.where(artist_id: 51)
  Album Load (0.7ms)  SELECT "albums".* FROM "albums" WHERE "albums"."artist_id" = $1  [["artist_id", 51]]
=> [#<Album:0x007fc9e0e182d0
  id: 36,
  artist_id: 51,
  title: "Greatest Hits II",
  created_at: Wed, 30 Jan 2008 14:00:12 UTC +00:00,
  updated_at: Wed, 29 Jan 2014 22:14:02 UTC +00:00>,
 #<Album:0x007fc9e0e18168
  id: 185,
  artist_id: 51,
  title: "Greatest Hits I",
  created_at: Sat, 29 Dec 2007 12:02:13 UTC +00:00,
  updated_at: Wed, 29 Jan 2014 22:14:02 UTC +00:00>,
 #<Album:0x007fc9e0e13fa0
  id: 186,
  artist_id: 51,
  title: "News Of The World",
  created_at: Wed, 23 Jun 2010 20:50:06 UTC +00:00,
  updated_at: Wed, 29 Jan 2014 22:14:02 UTC +00:00>]



______________________________________________________________________________________

2. Count how many tracks belong to the media type "Protected MPEG-4 video file"

[4] pry(main)> MediaType.where(name: 'Protected MPEG-4 video file')
  MediaType Load (0.6ms)  SELECT "media_types".* FROM "media_types" WHERE "media_types"."name" = $1  [["name", "Protected MPEG-4 video file"]]
=> [#<MediaType:0x007fc9e0d32460
  id: 3,
  name: "Protected MPEG-4 video file",
  created_at: Fri, 07 Dec 2007 13:17:17 UTC +00:00,
  updated_at: Wed, 29 Jan 2014 22:14:22 UTC +00:00>]
[5] pry(main)> Track.where(media_type_id: 3).length
  Track Load (3.9ms)  SELECT "tracks".* FROM "tracks" WHERE "tracks"."media_type_id" = $1  [["media_type_id", 3]]
=> 214

______________________________________________________________________________________

3. Find the genre with the name "Hip Hop/Rap".

[6] pry(main)> Genre.where(name: 'Hip Hop/Rap')
  Genre Load (1.1ms)  SELECT "genres".* FROM "genres" WHERE "genres"."name" = $1  [["name", "Hip Hop/Rap"]]
=> [#<Genre:0x007fc9e18d3530
  id: 17,
  name: "Hip Hop/Rap",
  created_at: Sun, 20 Jan 2013 02:04:31 UTC +00:00,
  updated_at: Wed, 29 Jan 2014 22:14:08 UTC +00:00>]

______________________________________________________________________________________

4. Count how many tracks belong to the "Hip Hop/Rap" genre 

[7] pry(main)> Track.where(genre_id: 17).length
  Track Load (1.8ms)  SELECT "tracks".* FROM "tracks" WHERE "tracks"."genre_id" = $1  [["genre_id", 17]]
=> 35

______________________________________________________________________________________

5. Find the total amount of time required to listen to all the tracks in the database

[18] pry(main)> Time.at(Track.sum(:milliseconds)/1000).utc.strftime("%d days %H hours %M minutes %S seconds")
   (1.8ms)  SELECT SUM("tracks"."milliseconds") FROM "tracks"
=> "16 days 22 hours 56 minutes 15 seconds"

______________________________________________________________________________________

6. Find the highest price of any track that has the media type "MPEG audio file".


[20] pry(main)> MediaType.where(name: 'MPEG audio file')
  MediaType Load (5.1ms)  SELECT "media_types".* FROM "media_types" WHERE "media_types"."name" = $1  [["name", "MPEG audio file"]]
=> [#<MediaType:0x007fc9e145bf70
  id: 1,
  name: "MPEG audio file",
  created_at: Fri, 24 Nov 2006 08:21:33 UTC +00:00,
  updated_at: Wed, 29 Jan 2014 22:14:22 UTC +00:00>]


[22] pry(main)> Track.where(media_type_id: 1).order('unit_price DESC').first
  Track Load (4.2ms)  SELECT  "tracks".* FROM "tracks" WHERE "tracks"."media_type_id" = $1 ORDER BY unit_price DESC LIMIT $2  [["media_type_id", 1], ["LIMIT", 1]]
=> #<Track:0x007fc9e70b4fb0
 id: 6,
 album_id: 1,
 genre_id: 1,
 media_type_id: 1,
 name: "Put The Finger On You",
 composer: "Angus Young, Malcolm Young, Brian Johnson",
 milliseconds: 205662,
 bytes: 6713451,
 unit_price: #<BigDecimal:7fc9e7810868,'0.99E0',9(18)>,
 created_at: Mon, 03 Jan 2005 05:49:26 UTC +00:00,
 updated_at: Wed, 29 Jan 2014 22:14:56 UTC +00:00>



